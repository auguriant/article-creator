
import { useState, useEffect } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { FileText, Settings, ExternalLink, CheckCircle, AlertCircle } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { PublishService } from "@/services/PublishService";
import { AutomationService } from "@/services/AutomationService";

export const DashboardPanel = () => {
  const navigate = useNavigate();
  const [stats, setStats] = useState({
    totalArticles: 0,
    published: 0,
    draft: 0,
    topicsConfigured: false,
    sourcesConfigured: false,
    linkedInConnected: false
  });
  const [recentArticles, setRecentArticles] = useState<any[]>([]);

  useEffect(() => {
    // Fetch dashboard stats
    const fetchStats = async () => {
      const articles = await PublishService.getArticles();
      const automationService = AutomationService.getInstance();
      
      setStats({
        totalArticles: articles.length,
        published: articles.filter(a => a.publishDate).length,
        draft: articles.length - articles.filter(a => a.publishDate).length,
        topicsConfigured: true, // Mock data - would be fetched from a real service
        sourcesConfigured: automationService.getSettings().interval > 0,
        linkedInConnected: false // Mock data - would be fetched from a real service
      });
      
      setRecentArticles(articles.slice(0, 3));
    };
    
    fetchStats();
  }, []);

  return (
    <div className="space-y-6">
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Total Articles</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{stats.totalArticles}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Published</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{stats.published}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Draft</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{stats.draft}</div>
          </CardContent>
        </Card>
      </div>

      <div className="grid gap-6 md:grid-cols-2">
        <Card className="col-span-1 md:col-span-1">
          <CardHeader>
            <CardTitle>Recent Articles</CardTitle>
            <CardDescription>Latest content generated by the system</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {recentArticles.length > 0 ? (
                <>
                  {recentArticles.map((article, index) => (
                    <div key={index} className="flex items-center justify-between border-b pb-2 last:border-0 last:pb-0 mb-2 last:mb-0">
                      <div>
                        <div className="font-medium">{article.title.length > 40 ? `${article.title.substring(0, 40)}...` : article.title}</div>
                        <div className="text-sm text-muted-foreground">
                          {new Date(article.publishDate).toLocaleDateString()}
                        </div>
                      </div>
                      <div className="flex items-center">
                        {article.publishDate ? (
                          <span className="text-xs bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 px-2 py-1 rounded-full">Published</span>
                        ) : (
                          <span className="text-xs bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200 px-2 py-1 rounded-full">Draft</span>
                        )}
                      </div>
                    </div>
                  ))}
                  <Button variant="outline" className="w-full mt-4" onClick={() => navigate('/admin')}>
                    View All Articles
                  </Button>
                </>
              ) : (
                <div className="text-center py-6 text-muted-foreground">
                  No articles yet. Create your first one!
                </div>
              )}
            </div>
          </CardContent>
        </Card>

        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>Set Up Status</CardTitle>
              <CardDescription>System configuration status</CardDescription>
            </CardHeader>
            <CardContent>
              <ul className="space-y-3">
                <li className="flex items-center justify-between">
                  <span className="flex items-center">
                    <span className="mr-2">Topics configured</span>
                  </span>
                  {stats.topicsConfigured ? (
                    <CheckCircle className="h-5 w-5 text-green-500" />
                  ) : (
                    <AlertCircle className="h-5 w-5 text-yellow-500" />
                  )}
                </li>
                <li className="flex items-center justify-between">
                  <span className="flex items-center">
                    <span className="mr-2">Sources configured</span>
                  </span>
                  {stats.sourcesConfigured ? (
                    <CheckCircle className="h-5 w-5 text-green-500" />
                  ) : (
                    <AlertCircle className="h-5 w-5 text-yellow-500" />
                  )}
                </li>
                <li className="flex items-center justify-between">
                  <span className="flex items-center">
                    <span className="mr-2">LinkedIn connection</span>
                  </span>
                  {stats.linkedInConnected ? (
                    <CheckCircle className="h-5 w-5 text-green-500" />
                  ) : (
                    <Button size="sm" variant="outline" className="flex items-center text-xs">
                      <ExternalLink className="mr-2 h-3 w-3" /> Connect
                    </Button>
                  )}
                </li>
              </ul>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Quick Actions</CardTitle>
              <CardDescription>Common tasks</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid gap-3">
                <Button onClick={() => navigate('/admin/manual')}>
                  <FileText className="mr-2 h-4 w-4" /> Create Article
                </Button>
                <Button variant="outline" onClick={() => navigate('/admin/automation')}>
                  <Settings className="mr-2 h-4 w-4" /> Configure Automation
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};
